{
  "title": "Ugly Number II",
  "content": "\n              <p></p><p>\r\nWrite a program to find the <code>n</code>-th ugly number.\r\n</p>\r\n\r\n<p>\r\nUgly numbers are positive numbers whose prime factors only include <code>2, 3, 5</code>. For example, <code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> is the sequence of the first <code>10</code> ugly numbers.\r\n</p>\r\n\r\n<p>\r\nNote that <code>1</code> is typically treated as an ugly number.\r\n</p>\r\n\r\n<ol id=\"hints\">\r\n  <li class=\"hint\">The naive approach is to call <code>isUgly</code> for every number until you reach the n<sup>th</sup> one. Most numbers are <i>not</i> ugly. Try to focus your effort on generating only the ugly ones.</li>\r\n  <li class=\"hint\">An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.</li>\r\n  <li class=\"hint\">The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L<sub>1</sub>, L<sub>2</sub>, and L<sub>3</sub>.</li>\r\n  <li class=\"hint\">Assume you have U<sub>k</sub>, the k<sup>th</sup> ugly number. Then U<sub>k+1</sub> must be Min(L<sub>1</sub> * 2, L<sub>2</sub> * 3, L<sub>3</sub> * 5).</li>\r\n</ol>\r\n\r\n<p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/jianchao.li.fighter\">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p><p></p>\n              \n                <div>\n                  <p><a href=\"/subscribe/\">Subscribe</a> to see which companies asked this question</p>\n                </div>\n              \n\n              \n                <div>\n                  <div id=\"tags\" class=\"btn btn-xs btn-warning\"></div>\n                  <span class=\"hidebutton\"></span>\n                </div>\n              \n\n              \n                <div>\n                  <div id=\"similar\" class=\"btn btn-xs btn-warning\"></div>\n                  <span class=\"hidebutton\"></span>\n                </div>\n              \n\n            "
}